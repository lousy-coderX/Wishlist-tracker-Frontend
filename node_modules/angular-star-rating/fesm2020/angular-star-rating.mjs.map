{"version":3,"file":"angular-star-rating.mjs","sources":["../../../libs/angular-star-rating/src/interfaces/star-rating-config.interface.ts","../../../libs/angular-star-rating/src/services/star-rating.utils.ts","../../../libs/angular-star-rating/src/services/star-rating.ts","../../../libs/angular-star-rating/src/services/star-rating-config.service.ts","../../../libs/angular-star-rating/src/components/star-rating/star-rating.component.ts","../../../libs/angular-star-rating/src/components/star-rating/star-rating.component.html","../../../libs/angular-star-rating/src/components/star-rating-control/star-rating-control.component.ts","../../../libs/angular-star-rating/src/components/star-rating-control/star-rating-control.component.html","../../../libs/angular-star-rating/src/angular-star-rating.module.ts","../../../libs/angular-star-rating/angular-star-rating.ts"],"sourcesContent":["export type starRatingSizes = 'small' | 'medium' | 'large';\nexport type starRatingColor = 'default' | 'negative' | 'ok' | 'positive';\nexport type starRatingSpeed = 'immediately' | 'noticeable' | 'slow';\nexport type starRatingLabelPosition = 'left' | 'right' | 'top' | 'bottom';\nexport type starRatingStarTypes = 'svg' | 'icon' | 'custom-icon';\nexport type starRatingStarSpace = 'no' | 'between' | 'around';\nexport type starRatingDirection = 'rtl' | 'ltr';\n\nexport class StarRatingConfig {\n  // binding defaults\n  numOfStars?: number;\n  size?: starRatingSizes;\n  speed?: starRatingSpeed;\n  labelPosition?: starRatingLabelPosition;\n  starType?: starRatingStarTypes;\n  staticColor: starRatingColor;\n  getColor?: (\n    rating: number,\n    numOfStars: number,\n    staticColor?: starRatingColor\n  ) => starRatingColor;\n  getHalfStarVisible?: (rating: number) => boolean;\n  // statics\n  classEmpty?: string;\n  classHalf?: string;\n  classFilled?: string;\n  assetsPath?: string;\n  svgPath?: string;\n  svgEmptySymbolId?: string;\n  svgHalfSymbolId?: string;\n  svgFilledSymbolId?: string;\n  svgPathEmpty?: string;\n  svgPathHalf?: string;\n  svgPathFilled?: string;\n}\n","import { starRatingColor } from '../interfaces/star-rating-config.interface';\nexport class StarRatingUtils {\n  //Static methods\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  /*\n   * getStarsArray\n   *\n   * returns an array of increasing numbers starting at 1\n   *\n   * @param numOfStars\n   * @returns {Array}\n   */\n  static getStarsArray(numOfStars: number): Array<number> {\n    let stars: Array<number> = [];\n    for (let i = 0; i < numOfStars; i++) {\n      stars.push(i + 1);\n    }\n    return stars;\n  }\n\n  /*\n   * getHalfStarVisible\n   *\n   * Returns true if there should be a half star visible, and false if not.\n   *\n   * @param rating\n   * @returns {boolean}\n   */\n  static getHalfStarVisible(rating: number): boolean {\n    return Math.abs(rating % 1) > 0;\n  }\n\n  /*\n   * getColor\n   *\n   * The default function for color calculation\n   * based on the current rating and the the number of stars possible.\n   * If a staticColor is set the function will use it as return value.\n   *\n   * @param rating\n   * @param numOfStars\n   * @param staticColor\n   * @returns {starRatingColor}\n   */\n  static getColor(\n    rating: number,\n    numOfStars: number,\n    staticColor?: starRatingColor\n  ): starRatingColor {\n    rating = rating || 0;\n\n    //if a fix color is set use this one\n    if (staticColor) {\n      return staticColor;\n    }\n\n    //calculate size of smallest fraction\n    let fractionSize = numOfStars / 3;\n\n    //apply color by fraction\n    let color: starRatingColor = 'default';\n    if (rating > 0) {\n      color = 'negative';\n    }\n    if (rating > fractionSize) {\n      color = 'ok';\n    }\n    if (rating > fractionSize * 2) {\n      color = 'positive';\n    }\n\n    return color;\n  }\n\n  /*\n   * isDigitKeyEventCode\n   * detects digit key event sodes\n   * @param eventCode\n   * @returns {boolean}\n   */\n  static isDigitKeyEventCode(eventCode: string): boolean {\n    return eventCode.indexOf('Digit') === 0;\n  }\n}\n","import {\n  StarRatingConfig,\n  starRatingColor,\n  starRatingDirection,\n  starRatingLabelPosition,\n  starRatingSizes,\n  starRatingSpeed,\n  starRatingStarSpace,\n  starRatingStarTypes,\n} from '../interfaces/star-rating-config.interface';\nimport { StarRatingConfigService } from './star-rating-config.service';\nimport { StarRatingUtils } from './star-rating.utils';\n\nexport class StarRating {\n  protected config: StarRatingConfig;\n\n  //CTRL ONLY\n  ///////////////////////////////////////////////////////////////////////////////////////////\n  classEmpty: string;\n  classHalf: string;\n  classFilled: string;\n\n  pathEmpty: string;\n  pathHalf: string;\n  pathFilled: string;\n\n  color: starRatingColor;\n  stars: Array<number>;\n  ratingAsInteger: number;\n  halfStarVisible: boolean;\n\n  /////////////////////////////////////////////\n\n  set rating(value: number) {\n    this.setRating(value);\n  }\n\n  /**\n   * showHalfStars\n   */\n  protected _showHalfStars: boolean;\n  get showHalfStars(): boolean {\n    return this._showHalfStars;\n  }\n\n  set showHalfStars(value: boolean) {\n    this._showHalfStars = !!value;\n\n    //update halfStarVisible\n    this.setHalfStarVisible();\n  }\n\n  /**\n   * getColor\n   */\n  getColor: (\n    rating: number,\n    numOfStars: number,\n    staticColor?: starRatingColor\n  ) => starRatingColor;\n  /////////////////////////////////////////////\n\n  /**\n   * getHalfStarVisible\n   */\n  getHalfStarVisible: (rating: number) => boolean;\n  /////////////////////////////////////////////\n\n  //Inputs\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * id property to identify the DOM element\n   */\n  protected _id: string;\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value || '';\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * focus\n   */\n  protected _focus: boolean;\n  get focus(): boolean {\n    return this._focus;\n  }\n\n  set focus(value: boolean) {\n    this._focus = !!value;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * labelText\n   */\n  protected _labelText: string;\n  get labelText(): string {\n    return this._labelText;\n  }\n\n  set labelText(value: string) {\n    this._labelText = value;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * labelPosition\n   */\n  protected _labelPosition: starRatingLabelPosition;\n  get labelPosition(): starRatingLabelPosition {\n    return this._labelPosition;\n  }\n\n  set labelPosition(value: starRatingLabelPosition) {\n    this._labelPosition = value || this.config.labelPosition;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * labelVisible\n   */\n  protected _labelVisible: boolean;\n  get labelVisible(): boolean {\n    return this._labelVisible;\n  }\n\n  set labelVisible(value: boolean) {\n    this._labelVisible = !!value;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * hoverEnabled\n   */\n  protected _hoverEnabled: boolean;\n  get hoverEnabled(): boolean {\n    return this._hoverEnabled;\n  }\n\n  set hoverEnabled(value: boolean) {\n    this._hoverEnabled = value !== undefined ? !!value : false;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * staticColor\n   */\n  protected _staticColor: starRatingColor;\n  get staticColor(): starRatingColor {\n    return this._staticColor || this.config.staticColor || undefined;\n  }\n\n  set staticColor(value: starRatingColor) {\n    this._staticColor = value;\n\n    //update color.\n    this.setColor();\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * direction\n   */\n  protected _direction: starRatingDirection;\n  get direction(): starRatingDirection {\n    return this._direction;\n  }\n\n  set direction(value: starRatingDirection) {\n    this._direction = value || undefined;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * numOfStars\n   */\n  protected _numOfStars: number;\n  get numOfStars(): number {\n    return this._numOfStars;\n  }\n\n  set numOfStars(value: number) {\n    this._numOfStars = value > 0 ? value : this.config.numOfStars;\n\n    //update stars array\n    this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\n\n    //update color\n    this.setColor();\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * hoverRating\n   */\n  protected _hoverRating: number;\n  get hoverRating(): number {\n    return this._hoverRating;\n  }\n\n  set hoverRating(value: number) {\n    this._hoverRating = value > 0 ? value : 0;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * speed\n   */\n  protected _speed: starRatingSpeed;\n  get speed(): starRatingSpeed {\n    return this._speed;\n  }\n\n  set speed(value: starRatingSpeed) {\n    this._speed = value || this.config.speed;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * size\n   */\n  protected _size: starRatingSizes;\n  get size(): starRatingSizes {\n    return this._size || this.config.size;\n  }\n\n  set size(value: starRatingSizes) {\n    this._size = value;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * starType\n   */\n  protected _starType: starRatingStarTypes;\n  get starType(): starRatingStarTypes {\n    return this._starType || this.config.starType;\n  }\n\n  set starType(value: starRatingStarTypes) {\n    this._starType = value;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * space\n   */\n  protected _space: starRatingStarSpace;\n  get space(): starRatingStarSpace {\n    return this._space;\n  }\n\n  set space(value: starRatingStarSpace) {\n    this._space = value;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * readOnly\n   */\n  protected _readOnly: boolean;\n  get readOnly(): boolean {\n    return this._readOnly;\n  }\n\n  set readOnly(value: boolean) {\n    this._readOnly = !!value;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * disabled\n   */\n  protected _disabled: boolean;\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  /////////////////////////////////////////////\n\n  private _step: number;\n  get step(): number {\n    return this._step;\n  }\n\n  set step(value: number) {\n    this._step = value > 0 ? value : 1;\n  }\n\n  /////////////////////////////////////////////\n\n  /**\n   * rating\n   */\n  protected _rating: number;\n  get rating(): number {\n    return this._rating;\n  }\n\n  /**\n   * setRating\n   * I use a setter function instead of a set method to enable overrides for this function.\n   * @param value\n   */\n  setRating(value: number) {\n    //validate and apply newRating\n    let newRating = 0;\n    if (value >= 0 && value <= this.numOfStars) {\n      newRating = value;\n    }\n\n    //limit max value to max number of stars\n    if (value > this.numOfStars) {\n      newRating = this.numOfStars;\n    }\n    this._rating = newRating;\n\n    //update ratingAsInteger. rating parsed to int for the value-[n] modifier\n    this.ratingAsInteger = parseInt(this._rating.toString(), 10);\n\n    //update halfStarsVisible\n    this.setHalfStarVisible();\n\n    //update calculated Color\n    this.setColor();\n  }\n\n  constructor(config: StarRatingConfigService) {\n    this.config = config;\n\n    //set default ctrl props\n    this.classEmpty = this.config.classEmpty;\n    this.classHalf = this.config.classHalf;\n    this.classFilled = this.config.classFilled;\n    this.pathEmpty = this.config.svgPathEmpty;\n    this.pathHalf = this.config.svgPathHalf;\n    this.pathFilled = this.config.svgPathFilled;\n\n    //set default Component Inputs\n    if (\n      'getColor' in this.config &&\n      typeof this.config.getColor === 'function'\n    ) {\n      this.getColor = this.config.getColor;\n    }\n\n    if (\n      'getHalfStarVisible' in this.config &&\n      typeof this.config.getHalfStarVisible === 'function'\n    ) {\n      this.getHalfStarVisible = this.config.getHalfStarVisible;\n    }\n\n    this.numOfStars = this.config.numOfStars;\n    this.rating = 0;\n    this.step = 1;\n  }\n\n  svgVisible(): boolean {\n    return this.starType === 'svg';\n  }\n\n  interactionPossible(): boolean {\n    return !this.readOnly && !this.disabled;\n  }\n\n  setColor(useHoverValue = false): void {\n    console.log('useHoverValue: ', useHoverValue);\n    //check if custom function is given\n    const ratingValue = useHoverValue ? this.hoverRating : this.rating;\n    if (typeof this.getColor === 'function') {\n      this.color = this.getColor(\n        ratingValue,\n        this.numOfStars,\n        this.staticColor\n      );\n    } else {\n      this.color = StarRatingUtils.getColor(\n        ratingValue,\n        this.numOfStars,\n        this.staticColor\n      );\n    }\n  }\n\n  setHalfStarVisible(): void {\n    //update halfStarVisible\n    if (this.showHalfStars) {\n      //check if custom function is given\n      if (typeof this.getHalfStarVisible === 'function') {\n        this.halfStarVisible = this.getHalfStarVisible(this.rating);\n      } else {\n        this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\n      }\n    } else {\n      this.halfStarVisible = false;\n    }\n  }\n\n  getComponentClassNames(): string {\n    const classNames: string[] = [];\n\n    classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\n    classNames.push(this.halfStarVisible ? 'half' : '');\n    classNames.push(this.hoverEnabled ? 'hover' : '');\n\n    const hoverRating = this.hoverRating\n      ? 'hover-' + this.hoverRating\n      : 'hover-0';\n    classNames.push(this.hoverEnabled ? hoverRating : '');\n\n    classNames.push(this.space ? 'space-' + this.space : '');\n    classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\n    classNames.push(this.color ? 'color-' + this.color : '');\n    classNames.push(this.starType ? 'star-' + this.starType : '');\n    classNames.push(this.speed);\n    classNames.push(this.size);\n    classNames.push(this.readOnly ? 'read-only' : '');\n    classNames.push(this.disabled ? 'disabled' : '');\n    classNames.push(this.direction ? 'direction-' + this.direction : '');\n\n    return classNames.join(' ');\n  }\n\n  increment() {\n    //increment to next higher step\n    const absDiff = Math.abs(this.rating % this.step);\n    this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\n  }\n\n  decrement() {\n    //decrement to next lower step\n    const absDiff = Math.abs(this.rating % this.step);\n    this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\n  }\n\n  reset() {\n    this.rating = 0;\n  }\n}\n","import {\n  StarRatingConfig,\n  starRatingColor,\n  starRatingSizes,\n  starRatingSpeed,\n  starRatingStarTypes,\n  starRatingLabelPosition,\n} from '../interfaces/star-rating-config.interface';\n\n/**\n * Configuration service for the StarRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the star ratings used in the application.\n */\nexport class StarRatingConfigService implements StarRatingConfig {\n  _classEmpty = 'default-star-empty-icon';\n\n  get classEmpty() {\n    return this._classEmpty;\n  }\n\n  set classEmpty(classEmpty: string) {\n    this._classEmpty = classEmpty;\n  }\n\n  private _classHalf = 'default-star-half-icon';\n\n  get classHalf(): string {\n    return this._classHalf;\n  }\n\n  set classHalf(classHalf: string) {\n    this._classHalf = classHalf;\n  }\n\n  private _classFilled = 'default-star-filled-icon';\n\n  get classFilled(): string {\n    return this._classFilled;\n  }\n\n  set classFilled(classFilled: string) {\n    this._classFilled = classFilled;\n  }\n\n  private _numOfStars = 5;\n\n  get numOfStars(): number {\n    return this._numOfStars;\n  }\n\n  set numOfStars(numOfStars: number) {\n    this._numOfStars = numOfStars;\n  }\n\n  private _size: starRatingSizes = 'medium';\n\n  get size(): starRatingSizes {\n    return this._size;\n  }\n\n  set size(size: starRatingSizes) {\n    this._size = size;\n  }\n\n  private _staticColor: starRatingColor;\n\n  get staticColor(): starRatingColor {\n    return this._staticColor;\n  }\n\n  set staticColor(value: starRatingColor) {\n    this._staticColor = value;\n  }\n\n  private _labelPosition: starRatingLabelPosition = 'left';\n\n  get labelPosition(): starRatingLabelPosition {\n    return this._labelPosition;\n  }\n\n  set labelPosition(labelPosition: starRatingLabelPosition) {\n    this._labelPosition = labelPosition;\n  }\n\n  private _speed: starRatingSpeed = 'noticeable';\n\n  get speed(): starRatingSpeed {\n    return this._speed;\n  }\n\n  set speed(speed: starRatingSpeed) {\n    this._speed = speed;\n  }\n\n  private _starType: starRatingStarTypes = 'svg';\n\n  get starType(): starRatingStarTypes {\n    return this._starType;\n  }\n\n  set starType(starType: starRatingStarTypes) {\n    this._starType = starType;\n  }\n\n  private _assetsPath = 'assets/images/';\n\n  get assetsPath(): string {\n    return this._assetsPath;\n  }\n\n  set assetsPath(assetsPath: string) {\n    this._assetsPath = assetsPath;\n  }\n\n  private _svgPath = this.assetsPath + 'star-rating.icons.svg';\n\n  get svgPath(): string {\n    return this._svgPath;\n  }\n\n  set svgPath(svgPath: string) {\n    this._svgPath = svgPath;\n  }\n\n  private _svgEmptySymbolId = 'star-empty';\n\n  get svgEmptySymbolId(): string {\n    return this._svgEmptySymbolId;\n  }\n\n  set svgEmptySymbolId(svgEmptySymbolId: string) {\n    this._svgEmptySymbolId = svgEmptySymbolId;\n  }\n\n  private _svgHalfSymbolId = 'star-half';\n\n  get svgHalfSymbolId(): string {\n    return this._svgHalfSymbolId;\n  }\n\n  set svgHalfSymbolId(svgHalfSymbolId: string) {\n    this._svgHalfSymbolId = svgHalfSymbolId;\n  }\n\n  private _svgFilledSymbolId = 'star-filled';\n\n  get svgFilledSymbolId(): string {\n    return this._svgFilledSymbolId;\n  }\n\n  set svgFilledSymbolId(svgFilledSymbolId: string) {\n    this._svgFilledSymbolId = svgFilledSymbolId;\n  }\n\n  private _svgPathEmpty: string = this.svgPath + '#' + this.svgEmptySymbolId;\n\n  get svgPathEmpty(): string {\n    return this._svgPathEmpty;\n  }\n\n  set svgPathEmpty(svgPathEmpty: string) {\n    this._svgPathEmpty = svgPathEmpty;\n  }\n\n  private _svgPathHalf: string = this.svgPath + '#' + this.svgHalfSymbolId;\n\n  get svgPathHalf(): string {\n    return this._svgPathHalf;\n  }\n\n  set svgPathHalf(svgPathHalf: string) {\n    this._svgPathHalf = svgPathHalf;\n  }\n\n  private _svgPathFilled: string = this.svgPath + '#' + this.svgFilledSymbolId;\n\n  get svgPathFilled(): string {\n    return this._svgPathFilled;\n  }\n\n  set svgPathFilled(svgPathFilled: string) {\n    this._svgPathFilled = svgPathFilled;\n  }\n\n  getColor(\n    rating: number,\n    numOfStars: number,\n    staticColor?: starRatingColor\n  ): starRatingColor {\n    rating = rating || 0;\n\n    // if a fix color is set use this one\n    if (staticColor) {\n      return staticColor;\n    }\n\n    // calculate size of smallest fraction\n    const fractionSize = numOfStars / 3;\n\n    // apply color by fraction\n    let color: starRatingColor = 'default';\n    if (rating > 0) {\n      color = 'negative';\n    }\n    if (rating > fractionSize) {\n      color = 'ok';\n    }\n    if (rating > fractionSize * 2) {\n      color = 'positive';\n    }\n\n    return color;\n  }\n\n  getHalfStarVisible(rating: number): boolean {\n    return Math.abs(rating % 1) > 0;\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { ClickEvent } from '../../interfaces/click-event.interface';\nimport { HoverRatingChangeEvent } from '../../interfaces/hover-rating-change-event.interface';\nimport { RatingChangeEvent } from '../../interfaces/rating-change-event.interface';\nimport { StarRating } from '../../services/star-rating';\nimport { StarRatingConfigService } from '../../services/star-rating-config.service';\nimport { StarRatingUtils } from '../../services/star-rating.utils';\n\n@Component({\n  selector: 'star-rating',\n  inputs: [\n    'getHalfStarVisible',\n    'getColor',\n    'showHalfStars',\n    'hoverEnabled',\n    'rating',\n    'step',\n    'disabled',\n    'readOnly',\n    'space',\n    'starType',\n    'size',\n    'speed',\n    'numOfStars',\n    'direction',\n    'staticColor',\n    //, 'labelVisible'\n    'labelPosition',\n    'labelText',\n    'id',\n  ],\n  outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\n  styleUrls: [],\n  templateUrl: 'star-rating.component.html',\n})\nexport class StarRatingComponent extends StarRating {\n  //Outputs\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  starClickChange: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\n\n  ratingChange: EventEmitter<RatingChangeEvent> = new EventEmitter<RatingChangeEvent>();\n\n  hoverRatingChange: EventEmitter<HoverRatingChangeEvent> = new EventEmitter<HoverRatingChangeEvent>();\n\n  saveOnClick($event: ClickEvent) {\n    if (this.starClickChange) {\n      this.starClickChange.emit($event);\n    }\n  }\n\n  saveOnRatingChange($event: RatingChangeEvent) {\n    if (this.ratingChange) {\n      this.ratingChange.emit($event);\n    }\n  }\n\n  saveOnHover($event: HoverRatingChangeEvent) {\n    if (this.hoverRatingChange) {\n      this.hoverRatingChange.emit($event);\n    }\n  }\n\n  /**ACCESSIBILITY **/\n\n  //Keyboard events\n  onKeyDown(event: KeyboardEvent) {\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    const handlers: any = {\n      //Decrement\n      Minus: () => this.decrement(),\n      ArrowDown: () => this.decrement(),\n      ArrowLeft: () => this.decrement(),\n\n      //Increment\n      Plus: () => this.increment(),\n      ArrowRight: () => this.increment(),\n      ArrowUp: () => this.increment(),\n\n      //Reset\n      Backspace: () => this.reset(),\n      Delete: () => this.reset(),\n      Digit0: () => this.reset(),\n    };\n\n    const handleDigits = (eventCode: string): void => {\n      const dStr = 'Digit';\n      const digit: number = parseInt(\n        eventCode.substr(dStr.length, eventCode.length - 1),\n        10\n      );\n      this.rating = digit;\n    };\n\n    if (\n      handlers[event['code']] ||\n      StarRatingUtils.isDigitKeyEventCode(event['code'])\n    ) {\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n        handleDigits(event['code']);\n      } else {\n        handlers[event['code']]();\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  //Hover events\n  onStarHover(rating?: number): void {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n    //update calculated Color\n    this.setColor(true);\n\n    //fire onHoverRatingChange event\n    const $event: HoverRatingChangeEvent = { hoverRating: this.hoverRating };\n    this.saveOnHover($event);\n  }\n\n  onStopHover() {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n\n    this.hoverRating = 0;\n    //update calculated Color\n    this.setColor();\n  }\n\n  constructor(config: StarRatingConfigService) {\n    super(config);\n  }\n\n  //Overrides\n  setRating(value: number): void {\n    const initValue = this.rating;\n    super.setRating(value);\n\n    //if value changed trigger valueAccessor events and outputs\n    if (initValue !== this.rating) {\n      const $event: RatingChangeEvent = { rating: this.rating };\n      this.saveOnRatingChange($event);\n    }\n  }\n\n  /**\n   * onStarClicked\n   *\n   * Is fired when a star is clicked. And updated the rating value.\n   * This function returns if the disabled or readOnly\n   * property is set. If provided it emits the onClick event\n   * handler with the actual rating value.\n   *\n   * @param rating\n   */\n  onStarClicked(rating: number): void {\n    //fire onClick event\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    this.rating = rating;\n\n    const onClickEventObject: ClickEvent = {\n      rating: this.rating,\n    };\n    this.saveOnClick(onClickEventObject);\n  }\n}\n","<div id=\"{{id}}\" class=\"rating {{getComponentClassNames()}}\" tabindex=\"0\"\n  (keydown)=\"onKeyDown($event)\" (mouseleave)=\"onStopHover()\">\n  <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\n  <div class=\"star-container\">\n    <div class=\"star\" (mouseenter)=\"onStarHover(star)\"\n      *ngFor=\"let star of stars\" (click)=\"onStarClicked(star)\">\n      <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\n      <i *ngIf=\"!svgVisible()\" class=\"star-half {{classHalf}}\"></i>\n      <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\n      <svg *ngIf=\"svgVisible()\" class=\"star-empty\">\n        <use xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          [attr.xlink:href]=\"pathEmpty\"></use>\n      </svg>\n      <svg *ngIf=\"svgVisible()\" class=\"star-half\">\n        <use xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          [attr.xlink:href]=\"pathHalf\"></use>\n      </svg>\n      <svg *ngIf=\"svgVisible()\" class=\"star-filled\">\n        <use xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          [attr.xlink:href]=\"pathFilled\"></use>\n      </svg>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ClickEvent } from '../../interfaces/click-event.interface';\nimport { HoverRatingChangeEvent } from '../../interfaces/hover-rating-change-event.interface';\nimport { RatingChangeEvent } from '../../interfaces/rating-change-event.interface';\nimport { StarRating } from '../../services/star-rating';\nimport { StarRatingConfigService } from '../../services/star-rating-config.service';\nimport { StarRatingUtils } from '../../services/star-rating.utils';\n\nconst STAR_RATING_CONTROL_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => StarRatingControlComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'star-rating-control',\n  providers: [STAR_RATING_CONTROL_ACCESSOR],\n  inputs: [\n    'getHalfStarVisible',\n    'getColor',\n    'showHalfStars',\n    'hoverEnabled',\n    'rating',\n    'step',\n    'disabled',\n    'readOnly',\n    'space',\n    'starType',\n    'size',\n    'speed',\n    'numOfStars',\n    'direction',\n    'staticColor',\n    //, 'labelVisible'\n    'labelPosition',\n    'labelText',\n    'id',\n  ],\n  outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\n  styleUrls: [],\n  templateUrl: 'star-rating-control.component.html',\n})\nexport class StarRatingControlComponent\n  extends StarRating\n  implements ControlValueAccessor {\n  //Outputs\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  starClickChange: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\n\n  ratingChange: EventEmitter<RatingChangeEvent> = new EventEmitter<RatingChangeEvent>();\n\n  hoverRatingChange: EventEmitter<HoverRatingChangeEvent> = new EventEmitter<HoverRatingChangeEvent>();\n\n  onTouch: Function;\n  onModelChange: Function;\n  private onModelChangeRegistered = false;\n  private onTouchRegistered = false;\n\n  saveOnClick($event: ClickEvent) {\n    if (this.starClickChange) {\n      this.starClickChange.emit($event);\n    }\n  }\n\n  saveOnRatingChange($event: RatingChangeEvent) {\n    if (this.ratingChange) {\n      this.ratingChange.emit($event);\n    }\n  }\n\n  saveOnHover($event: HoverRatingChangeEvent) {\n    if (this.hoverRatingChange) {\n      this.hoverRatingChange.emit($event);\n    }\n  }\n\n  saveOnTouch() {\n    if (this.onTouchRegistered) {\n      this.onTouch();\n    }\n  }\n\n  saveOnModelChange(value: number) {\n    if (this.onModelChangeRegistered) {\n      this.onModelChange(value);\n    }\n  }\n\n  /**ACCESSIBILITY **/\n\n  //Keyboard events\n  onKeyDown(event: KeyboardEvent) {\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    const handlers: any = {\n      //Decrement\n      Minus: () => this.decrement(),\n      ArrowDown: () => this.decrement(),\n      ArrowLeft: () => this.decrement(),\n\n      //Increment\n      Plus: () => this.increment(),\n      ArrowRight: () => this.increment(),\n      ArrowUp: () => this.increment(),\n\n      //Reset\n      Backspace: () => this.reset(),\n      Delete: () => this.reset(),\n      Digit0: () => this.reset(),\n    };\n\n    const handleDigits = (eventCode: string): void => {\n      const dStr = 'Digit';\n      const digit: number = parseInt(\n        eventCode.substr(dStr.length, eventCode.length - 1),\n        10\n      );\n      this.rating = digit;\n    };\n\n    if (\n      handlers[event['code']] ||\n      StarRatingUtils.isDigitKeyEventCode(event['code'])\n    ) {\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n        handleDigits(event['code']);\n      } else {\n        handlers[event['code']]();\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.saveOnTouch();\n  }\n\n  //Focus events\n  onBlur(event: FocusEvent) {\n    this.focus = false;\n    event.preventDefault();\n    event.stopPropagation();\n    this.saveOnTouch();\n  }\n\n  onFocus(event: FocusEvent) {\n    this.focus = true;\n    event.preventDefault();\n    event.stopPropagation();\n    this.saveOnTouch();\n  }\n\n  //Hover events\n  onStarHover(rating?: number): void {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n\n    //fire onHoverRatingChange event\n    const $event: HoverRatingChangeEvent = { hoverRating: this.hoverRating };\n    this.saveOnHover($event);\n  }\n\n  /**Form Control - ControlValueAccessor implementation**/\n\n  writeValue(obj: any): void {\n    this.rating = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n    this.onModelChangeRegistered = true;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n    this.onTouchRegistered = true;\n  }\n\n  constructor(config: StarRatingConfigService) {\n    super(config);\n  }\n\n  //Overrides\n  setRating(value: number): void {\n    const initValue = this.rating;\n    super.setRating(value);\n\n    //if value changed trigger valueAccessor events and outputs\n    if (initValue !== this.rating) {\n      const $event: RatingChangeEvent = { rating: this.rating };\n      this.saveOnRatingChange($event);\n\n      this.saveOnModelChange(this.rating);\n    }\n  }\n\n  /**\n   * onStarClicked\n   *\n   * Is fired when a star is clicked. And updated the rating value.\n   * This function returns if the disabled or readOnly\n   * property is set. If provided it emits the onClick event\n   * handler with the actual rating value.\n   *\n   * @param rating\n   */\n  onStarClicked(rating: number): void {\n    //fire onClick event\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    this.rating = rating;\n\n    const onClickEventObject: ClickEvent = {\n      rating: this.rating,\n    };\n    this.saveOnClick(onClickEventObject);\n  }\n}\n","<div id=\"{{id}}\" class=\"rating {{getComponentClassNames()}}\" tabindex=\"0\"\n  (keydown)=\"onKeyDown($event)\" (blur)=\"onBlur($event)\"\n  (focus)=\"onFocus($event)\" (mouseleave)=\"onStarHover(0)\">\n  <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\n  <div class=\"star-container\">\n    <div class=\"star\" (mouseenter)=\"onStarHover(star)\"\n      *ngFor=\"let star of stars\" (click)=\"onStarClicked(star)\">\n      <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\n      <i *ngIf=\"!svgVisible()\" class=\"star-half {{classHalf}}\"></i>\n      <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\n      <svg *ngIf=\"svgVisible()\" class=\"star-empty\">\n        <use xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          [attr.xlink:href]=\"pathEmpty\"></use>\n      </svg>\n      <svg *ngIf=\"svgVisible()\" class=\"star-half\">\n        <use xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          [attr.xlink:href]=\"pathHalf\"></use>\n      </svg>\n      <svg *ngIf=\"svgVisible()\" class=\"star-filled\">\n        <use xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          [attr.xlink:href]=\"pathFilled\"></use>\n      </svg>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { StarRatingComponent } from './components/star-rating/star-rating.component';\nimport { StarRatingControlComponent } from './components/star-rating-control/star-rating-control.component';\nimport { StarRatingConfigService } from './services/star-rating-config.service';\n\nconst DECLARATIONS = [StarRatingComponent, StarRatingControlComponent];\nconst EXPORTS = [DECLARATIONS];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DECLARATIONS],\n  exports: [EXPORTS],\n})\nexport class StarRatingModule {\n  static forRoot(): ModuleWithProviders<StarRatingModule> {\n    return {\n      ngModule: StarRatingModule,\n      providers: [StarRatingConfigService],\n    };\n  }\n\n  static forChild(): ModuleWithProviders<StarRatingModule> {\n    return {\n      ngModule: StarRatingModule,\n      providers: [],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}